# generate the following six parameters with the following command
# python3 ~/psono-server/psono/manage.py generateserverkeys
SECRET_KEY: '***'
ACTIVATION_LINK_SECRET: '***'
DB_SECRET: '***'
EMAIL_SECRET_SALT: '***'
PRIVATE_KEY: '***'
PUBLIC_KEY: '***'
# The URL of the web client (path to e.g activate.html without the trailing slash)
WEB_CLIENT_URL: 'https://psono.q***.com'

# Switch DEBUG to false if you go into production
DEBUG: ***

# Adjust this according to Django Documentation https://docs.djangoproject.com/en/1.10/ref/settings/
ALLOWED_HOSTS: ['*']

# Should be your domain without "www.". Will be the last part of the username
ALLOWED_DOMAINS: ['q***.com', 'psono.q***.com', 'd***.com']

# If you want to disable registration, you can comment in the following line
# ALLOW_REGISTRATION: False
ALLOW_REGISTRATION: ***

# If you want to restrict registration to some email addresses you can specify here a list of domains to filter
# REGISTRATION_EMAIL_FILTER: ['company1.com', 'company2.com']

# Should be the URL of the host under which the host is reachable
# If you open the url you should have a text similar to {"detail":"Authentication credentials were not provided."}
HOST_URL: 'https://psono.q***.com/***'

# The email used to send emails, e.g. for activation
EMAIL_FROM: '***@d***.com'
EMAIL_HOST: '***'
EMAIL_HOST_USER: ''
EMAIL_HOST_PASSWORD : ''
EMAIL_PORT: ***
EMAIL_SUBJECT_PREFIX: ''
EMAIL_USE_TLS: ***
EMAIL_USE_SSL: ***
EMAIL_SSL_CERTFILE:
EMAIL_SSL_KEYFILE:
EMAIL_TIMEOUT:

# In case one wants to use mailgun, comment in below lines and provide the mailgun access key and server name
EMAIL_BACKEND: 'anymail.backends.mailgun.EmailBackend'
MAILGUN_ACCESS_KEY: '***'
MAILGUN_SERVER_NAME: 'd***.com'

# In case you want to offer Yubikey support, create a pair of credentials here https://upgrade.yubico.com/getapikey/
# and update the following two lines before commenting them in
# YUBIKEY_CLIENT_ID: '123456'
# YUBIKEY_SECRET_KEY: '8I65IA6ASDFIUHGIH5021FKJA='

# If you have own Yubico servers, you can specify here the urls as a list
# YUBICO_API_URLS: ['https://api.yubico.com/wsapi/2.0/verify']

# Cache enabled without belows Redis may lead to unexpected behaviour

# Cache with Redis
# By default you should use something different than database 0 or 1, e.g. 13 (default max is 16, can be configured in
# redis.conf) possible URLS are:
#    redis://[:password]@localhost:6379/0
#    rediss://[:password]@localhost:6379/0
#    unix://[:password]@/path/to/socket.sock?db=0
# CACHE_ENABLE: False
# CACHE_REDIS: False
# CACHE_REDIS_LOCATION: 'redis://127.0.0.1:6379/13'

# Disables Throttling (necessary for unittests to pass) by overriding the cache with a dummy cache
# https://docs.djangoproject.com/en/1.11/topics/cache/#dummy-caching-for-development
# THROTTLING: False

# Enables the management API, required for the psono-admin-client / admin portal
# MANAGEMENT_ENABLED: False
MANAGEMENT_ENABLED: ***

# Allows that users can search for partial usernames
ALLOW_USER_SEARCH_BY_USERNAME_PARTIAL: ***

# Allows that users can search for email addresses too
# ALLOW_USER_SEARCH_BY_EMAIL: True

# Only necessary if the psono-client runs on a sub path (no trailing slash) e.g. "https://wwww.psono.pw"
# WEB_CLIENT_URL: ''

# Prevents the use of the last X passwords. 0 disables it.
# DISABLE_LAST_PASSWORDS: 0

# Your Postgres Database credentials
DATABASES:
    default:
        'ENGINE': 'django.db.backends.postgresql_psycopg2'
        'NAME': '***'
        'USER': '***'
        'PASSWORD': '***'
        'HOST': '***'
        'PORT': '***'
# for master / slave replication setup comment in the following (all reads will be redirected to the slave
#    slave:
#        'ENGINE': 'django.db.backends.postgresql_psycopg2'
#        'NAME': 'YourPostgresDatabase'
#        'USER': 'YourPostgresUser'
#        'PASSWORD': 'YourPostgresPassword'
#        'HOST': 'YourPostgresHost'
#        'PORT': 'YourPostgresPort'

# Update the path to your templates folder
# If you do not want to change it (yet) you can leave it like it is.
TEMPLATES: [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['/***/psono/data/psono-server/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]



COMPLIANCE_MIN_MASTER_PASSWORD_LENGTH: ***
COMPLIANCE_MIN_MASTER_PASSWORD_COMPLEXITY: ***
COMPLIANCE_ENFORCE_CENTRAL_SECURITY_REPORTS: ***
COMPLIANCE_CENTRAL_SECURITY_REPORT_SECURITY_RECURRENCE_INTERVAL: ***
COMPLIANCE_ENFORCE_2FA: ***
MAX_WEB_TOKEN_TIME_VALID: ***
ALLOW_MULTIPLE_SESSIONS: ***
DISABLE_LAST_PASSWORDS: ***

